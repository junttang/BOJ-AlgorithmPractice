#include <iostream>
// BOJ - 2133 타일 채우기
using namespace std;
long long d[31];

/*
핵심은, D[i] = D[i-2]*3 + D[i-4]*2 + D[i-6]*2 + .. D[i-i]*2
의 관계식을 알아내는 것이다.

참고로, D[0]*2 는 곧 2로, D[4]에서부터 발생하는 고정적인 예외상황
2가지를 지속적으로 더해주는 행위이다.

i-2가 3 곱해지는 것은, D[i]에서 2라인 물러나면 3*2만큼이 남는데, 이 친구가
3가지 경우이므로 그런 것이고,
i-4부터 2가 곱해지는 것은,
4라인 물러난 3*4사이즈에 앞선 케이스에서 커버치지 못하는, 즉, 예외 꼴이 들어오는
상황을 상정하여 예외꼴의 모습 2가지를 곱해준 것이다.

이것이 이어지는 것이다.

어려운 문제이다.
*/

int main() {
	int n;
	cin >> n;
	d[0] = 1;
	for (int i = 2; i <= n; i += 2) {
		d[i] = d[i - 2] * 3;
		for (int j = i - 4; j >= 0; j -= 2) {
			d[i] += d[j] * 2;
		}
	}
	cout << d[n] << '\n';
	return 0;
}